

The following packages we are likely to need at PITP 2016. Each UNIX
distro (linux and mac alike) have different ways how to install
them. Some example are given here how to do them.

You can find copied of codes on either our published URL's , or
within the directory /data/pitp on the IAS cluster where all participants
have an account.


#--------------------------------------------------------------------------------
UNIX COMMANDS:


git
	we also use this to distribute notes, scripts, software for PITP 2016.
	To get a copy of the PITP notes:

	   git clone http://github.com/teuben/pitp2016
	   cd pitp2016

	and to get a updated version with the latest additions:

	   cd pitp2016
	   git pull


gcc	   
g++
gfortran

	The C/C++/Fortran(90) compiler suite.  Others may be available as well that work
	also, e.g. "clang", the Intel compiler and the PGI compiler.
	The C compiler needs to suport OpenMP (which gcc does)


python
ipython

	Although the python command may be present for you, what we really want here is
	an integrated scientific python environment, e.g. via anaconda.
	Within python, the following modules are recommended:

	numpy
	scipy
	matplotlib
	yt
	astropy
	pandas
	scikit-learn
	glueviz


ffmpeg
       This tool creates movies from still images that simulations often create on the fly.
       Great for presentations. We will use this for a few of the homeworks.

       In ubuntu linux:
           sudo apt install ffmpeg imagemagick vlc




gnuplot
	A simple, basic but effective way to plot data.

ygraph
	Another simple and basic graph plotter. 
	See for example http://cactuscode.org/documentation/visualization/yGraph/

visit
        A more graphical based visualization environment
	See
	    https://wci.llnl.gov/simulation/computer-codes/visit/


#--------------------------------------------------------------------------------
UNIX LIBRARIES:

openmpi 
	This is one of the ways to implement MPI, and probably our preferred way.
	On Ubuntu/Linux:     apt install openmpi-bin libopenmpi-dev libhdf5-openmpi-dev

	On mac/homebrew:     brew install gcc
	   		     brew install openmpi --enable-mpi-thread-multiple
			     brew install hdf5 --with-fortran --with-mpi

mpich
	This is another MPI library:
	On Ubuntu/Linux:     apt install mpich
	but not experimented with this yet, as openmpi seems to work.

gsl
	This is the Gnu Scientific Library. Use your package manager to install it, e.g.
	In Ubuntu linux:
            sudo apt install libgsl-dev

yt
	Versatile visualization environment in python. Probably easiest to install within
	your python environment via the commands
		conda install yt
        or 
		pip install yt
	depending which type of python environment you have.

	The new yt 3.3-dev (development) series can be installed as follows:  

	        conda install -c http://use.yt/with_conda yt                 (unix)
		conda install -c http://conda.anaconda.org/jzuhone yt        (windows)
		
  	or if you have another python stack (or just want to use pip):
	# build from source on macOS or Linux:
	  	pip install hg+https://bitbucket.org/yt_analysis/yt#egg=yt
	# binary install on macOS or Windows:
	  	pip install -pre yt
	

d3js
	This is a JavaScript based visualization toolkit. Great to present your research online
	for outreach, collaborators etc.
	See https://d3js.org/


athena
	(Stone) more instructions will follow
	Use athena4.2.tar.gz

harm
	more instructions will follow

iharm2d_v3
	(Gammie) more instructions will follow

tristan
	(Spitovsky) more instructions will follow
