

The following commands should be working for you at the unix shell, if not
see if you can install them with your favorite package tool.
This file is also part of our pitp2016 git repo (see below on how to update
this) as "packages.txt"



git
	we also use this to distribute notes, scripts, software for PITP 2016.
	To get a copy of the PITP notes:

	   git clone http://github.com/teuben/pitp2016
	   cd pitp2016

	and to get a updated version with the latest additions:

	   cd pitp2016
	   git pull


gcc	   
g++
gfortran

	The C/C++/Fortran(90) compiler suite.  Others may be available as well that work
	also, e.g. "clang", the Intel compiler and the PGI compiler.
	The C compiler needs to suport OpenMP (which gcc does)


openmpi 
	This is one of the ways to implement MPI, and probably our preferred way.
	On Ubuntu/Linux:     apt install openmpi-bin libopenmpi-dev libhdf5-openmpi-dev

	On mac/homebrew:     brew install gcc
	   		     brew install openmpi --enable-mpi-thread-multiple
			     brew install hdf5 --with-fortran --with-mpi

mpich
	This is another MPI library:
	On Ubuntu/Linux:     apt install mpich
	but not experimented with this.

python
ipython

	Although the python command may be present for you, what we really want here is
	an integrated scientific python environment, e.g. via anaconda.
	Within python, the following modules are recommended:

	numpy
	scipy
	matplotlib
	yt
	astropy
	pandas
	scikit-learn
	glueviz


ffmpeg
       This tool creates movies from still images that simulations often create on the fly.
       Great for presentations. We will use this for a few of the homeworks.

       In ubuntu linux:
           sudo apt install ffmpeg imagemagick vlc

gsl
	This is the Gnu Scientific Library. Use your package manager to install it, e.g.
	In Ubuntu linux:
            sudo apt install libgsl-dev



gnuplot
	A simple, basic but effective way to plot data.

ygraph
	Another simple and basic graph plotter. 
	See for example http://cactuscode.org/documentation/visualization/yGraph/


yt
	Versatile visualization environment in python. Probably easiest to install within
	your python environment via the commands
		conda install yt
        or
		pip install yt
	depending which type of python environment you have
	

visit
        A more graphical based visualization environment
	See
	    https://wci.llnl.gov/simulation/computer-codes/visit/

d3js
	This is a JavaScript based visualization toolkit. Great to present your research online
	for outreach, collaborators etc.
	See https://d3js.org/


athena
	more instructions will follow

harm
	more instructions will follow

iharm
	more instructions will follow
